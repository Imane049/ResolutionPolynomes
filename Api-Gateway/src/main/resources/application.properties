# ==============================
# Eureka Configuration
# ==============================
eureka.client.service-url.default-zone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost
spring.application.name=APIGATEWAY
server.port=8080
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

# ==============================
# Gateway Configuration
# ==============================
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Manually Defined Quadratic Resolution Service Route
spring.cloud.gateway.routes[0].id=QUADRATICRESOLUTION
spring.cloud.gateway.routes[0].uri=http://127.0.0.1:8082
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/quadratic/**
spring.cloud.gateway.routes[0].filters[0]=AddResponseHeader=X-Response-From-Gateway,QUADRATICRESOLUTION

# Manually Defined Cardanos Resolution Service Route
spring.cloud.gateway.routes[1].id=CARDANOSRESOLUTION
spring.cloud.gateway.routes[1].uri=http://127.0.0.1:8083
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/cardanos/**
spring.cloud.gateway.routes[1].filters[0]=AddResponseHeader=X-Response-From-Gateway,CARDANOSRESOLUTION
# Manually Defined Newton Raphson  Resolution Service Route
spring.cloud.gateway.routes[2].id=NEWTONRAPHSONRESOLUTION
spring.cloud.gateway.routes[2].uri=http://127.0.0.1:8084
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/newtonraphson/**
spring.cloud.gateway.routes[2].filters[0]=AddResponseHeader=X-Response-From-Gateway,NEWTONRAPHSONRESOLUTION
# Manually Defined Newton Raphson  Resolution Service Route
spring.cloud.gateway.routes[3].id=BISECTIONRESOLUTION
spring.cloud.gateway.routes[3].uri=http://127.0.0.1:8085
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/v1/bisection/**
spring.cloud.gateway.routes[3].filters[0]=AddResponseHeader=X-Response-From-Gateway,BISECTIONRESOLUTION

spring.cloud.gateway.routes[4].id=BAIRSTOWRESOLUTION
spring.cloud.gateway.routes[4].uri=http://127.0.0.1:8086
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/bairstow\/**
spring.cloud.gateway.routes[4].filters[0]=AddResponseHeader=X-Response-From-Gateway,BAIRSTOWRESOLUTION

spring.cloud.gateway.routes[5].id=MULLERRESOLUTION
spring.cloud.gateway.routes[5].uri=http://127.0.0.1:8087
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/v1/muller\/**
spring.cloud.gateway.routes[5].filters[0]=AddResponseHeader=X-Response-From-Gateway,MULLERRESOLUTION

spring.cloud.gateway.routes[6].id=FERRARIRESOLUTION
spring.cloud.gateway.routes[6].uri=http://127.0.0.1:8090
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/v1/ferrari/**
spring.cloud.gateway.routes[6].filters[0]=AddResponseHeader=X-Response-From-Gateway,FERRARIRESOLUTION

spring.cloud.gateway.routes[7].id=LINEARRESOLUTION
spring.cloud.gateway.routes[7].uri=http://127.0.0.1:8089
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/v1/linear/**
spring.cloud.gateway.routes[7].filters[0]=AddResponseHeader=X-Response-From-Gateway,QUADRATICRESOLUTION

spring.cloud.gateway.routes[8].id=FIXEDPOINTRESOLUTION
spring.cloud.gateway.routes[8].uri=http://127.0.0.1:8091
spring.cloud.gateway.routes[8].predicates[0]=Path=/api/v1/fixedpoint/**
spring.cloud.gateway.routes[8].filters[0]=AddResponseHeader=X-Response-From-Gateway,FIXEDPOINTRESOLUTION

spring.cloud.gateway.routes[9].id=GEMINIRESOLUTION
spring.cloud.gateway.routes[9].uri=http://127.0.0.1:8088
spring.cloud.gateway.routes[9].predicates[0]=Path=/api/v1/Gemini/**
spring.cloud.gateway.routes[9].filters[0]=AddResponseHeader=X-Response-From-Gateway,GEMINIRESOLUTION
# ==============================
# Actuator for Health Checks
# ==============================
management.endpoints.web.exposure.include=*
management.endpoint.gateway.enabled=true
management.endpoint.health.show-details=always

# ==============================
# Logging for Troubleshooting
# ==============================
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.com.netflix.eureka=DEBUG
logging.level.com.netflix.discovery=DEBUG

spring.webflux.cors.allowed-origins=http://localhost:4200
spring.webflux.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.webflux.cors.allowed-headers=*
